[tox]
envlist = py39,py310,py311,py312,terraform,lint,security
isolated_build = true

[testenv]
deps = -r{toxinidir}/tests/requirements.txt
       -r{toxinidir}/src/requirements.txt
commands = pytest tests/unit/ -v --cov=src --cov-report=term-missing

[testenv:terraform]
deps = pytest
       pytest-terraform
allowlist_externals = terraform
commands =
    terraform fmt -check -diff
    terraform init -backend=false
    terraform validate
    pytest tests/unit/test_terraform.py -v -m terraform

[testenv:integration]
deps = -r{toxinidir}/tests/requirements.txt
       -r{toxinidir}/src/requirements.txt
commands = pytest tests/integration/ -v -m integration

[testenv:lint]
deps = flake8
       black
       isort
       mypy
commands =
    flake8 src/ tests/ --max-line-length=100 --ignore=E203,W503
    black --check src/ tests/
    isort --check-only src/ tests/
    mypy src/ --ignore-missing-imports

[testenv:security]
deps = bandit
       safety
commands =
    bandit -r src/ -f json -o bandit-report.json
    safety check --json --output safety-report.json

[testenv:format]
deps = black
       isort
commands =
    black src/ tests/
    isort src/ tests/

[testenv:coverage]
deps = -r{toxinidir}/tests/requirements.txt
       -r{toxinidir}/src/requirements.txt
commands = pytest tests/unit/ --cov=src --cov-report=html --cov-report=xml --cov-fail-under=80

[flake8]
max-line-length = 100
ignore = E203,W503
exclude = .git,__pycache__,.tox,.eggs,*.egg,build,dist

[coverage:run]
source = src
omit =
    */tests/*
    */venv/*
    */.tox/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError